<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       https://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="org.mycompany.ConvertToMap" id="convertMap"/>
    <bean class="java.util.concurrent.Executors"
        factory-method="newCachedThreadPool" id="myPool"/>
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <dataFormats>
            <jaxb contextPath="org.mycompany.model" id="orderconv" partClass="org.mycompany.model.Order"/>
        </dataFormats>
        <onException useOriginalMessage="true">
            <exception>java.lang.IllegalArgumentException</exception>
            <exception>org.mycompany.exception.MyProcessorCastException</exception>
            <!-- tell Camel to handle and continue when this exception was thrown -->
            <continued>
                <constant>true</constant>
            </continued>
            <to uri="jms:queue:app.mydeadletter"/>
        </onException>
        <!-- 
        <route id="simple-route">
            <from id="frommainqueue" uri="jms:queue:app.mainqueue"/>
            <onException id="_onException1">
                <exception>org.mycompany.exception.MyProcessorCastException</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <setBody id="_setBody1">
                    <exchangeProperty>orginalMessage</exchangeProperty>
                </setBody>
                <to id="_to2" uri="jms:queue:app.mydeadletter"/>
            </onException>
            <unmarshal id="_unmarshal1" ref="orderconv"/>
            <process id="_process1" ref="convertMap"/>
            <to id="_to1" uri="sql:INSERT INTO ORDERS(ORDERID,PRODUCTID,productName,productDescription,customerId,firstName,lastName) VALUES (:#orderid,:#productid,:#productName,:#productDescription,:#customerId,:#firstName,:#lastName)"/>
            <setHeader headerName="end" id="_setHeader2">
                <simple>date:now:HH:mm:ss</simple>
            </setHeader>
            <log id="exitlog" message="==route execution time: ${header.end}"/>
        </route>
          -->
        <!--  
        </route>
            <route id="simple-route"> 
            <from id="frommainqueue" uri="jms:queue:app.mainqueue?concurrentConsumers=10">
            <onException><exception>org.mycompany.exception.MyProcessorCastException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <to uri="jms:queue:app.mydeadletter"/>
            </onException>
            <setHeader headerName="start" id="_setHeader1">
                <simple>date:now:HH:mm:ss</simple>
            </setHeader>
                <unmarshal id="_unmarshal1" ref="orderconv"/>
                <process id="_process1" ref="convertMap"/>
                    <to id="_to1" uri="sql:INSERT INTO ORDERS(ORDERID,PRODUCTID,productName,productDescription,customerId,firstName,lastName) VALUES (:#orderid,:#productid,:#productName,:#productDescription,:#customerId,:#firstName,:#lastName)"/>
            <setHeader headerName="end" id="_setHeader2">
                <simple>date:now:HH:mm:ss</simple>
            </setHeader>
            <log id="exitlog" message="==route execution time: ${header.start} - ${header.end}"/>

        </route> 

      -->
        <!-- ESCENARIO 2: USING THREAD POOL
        <route id="simple-route">
            <from id="frommainqueue" uri="jms:queue:app.mainqueue?concurrentConsumers=10"/>
            <setHeader headerName="start" id="_setHeader1">
                <simple>date:now:HH:mm:ss</simple>
            </setHeader>
            <threads id="_threads1" poolSize="10">
                <split id="_split1" parallelProcessing="true"
                    strategyRef="listAggregationStrategy" streaming="true">
                    <tokenize token="order" xml="true"/>
                    <unmarshal id="_unmarshal1" ref="orderconv"/>
                    <process id="_process1" ref="convertMap"/>
                    <aggregate completionSize="150"
                        completionTimeout="10000" id="_aggregate1"
                        parallelProcessing="true" strategyRef="listAggregationStrategy">
                        <correlationExpression>
                            <simple>:#tableName == "RU_RU"</simple>
                        </correlationExpression>
                        <to id="_to1" uri="sql:INSERT INTO ORDERS(ORDERID,PRODUCTID,productName,productDescription,customerId,firstName,lastName) VALUES (:#orderid,:#productid,:#productName,:#productDescription,:#customerId,:#firstName,:#lastName)?batch=true"/>
                    </aggregate>
                </split>
            </threads>
            <setHeader headerName="end" id="_setHeader2">
                <simple>date:now:HH:mm:ss</simple>
            </setHeader>
            <log id="exitlog" message="==route execution time: ${header.start} - ${header.end}"/>
        </route>
    -->
        <route id="simple-route">
            <from id="frommainqueue" uri="jms:queue:app.mainqueue"/>
            <onException id="_onException1">
                <exception>org.mycompany.exception.MyProcessorCastException</exception>
                <exception>java.sql.SQLSyntaxErrorException</exception>
                <redeliveryPolicy maximumRedeliveries="2" redeliveryDelay="100"/>
                <handled>
                    <constant>true</constant>
                </handled>
                <setBody id="_setBody1">
                    <exchangeProperty>orginalMessage</exchangeProperty>
                </setBody>
                <to id="_to2" uri="jms:queue:app.mydeadletter"/>
            </onException>
            <setProperty id="_setProperty1" propertyName="originalMessage">
                <simple>${body}</simple>
            </setProperty>
            <unmarshal id="_unmarshal1" ref="orderconv"/>
            <process id="_process1" ref="convertMap"/>
            <aggregate completionSize="10" completionTimeout="10000"
                id="_aggregate1" parallelProcessing="true" strategyRef="listAggregationStrategy">
                <correlationExpression>
                    <simple>:#tableName == "RU_RU"</simple>
                </correlationExpression>
                <to id="_to1" uri="sql:INSERT INTO db.ORDERS(ORDERID,PRODUCTID,productName,productDescription,customerId,firstName,lastName) VALUES (:#orderid,:#productid,:#productName,:#productDescription,:#customerId,:#firstName,:#lastName)?batch=true"/>
            </aggregate>
            <setHeader headerName="end" id="_setHeader2">
                <simple>date:now:HH:mm:ss</simple>
            </setHeader>
            <log id="exitlog" message="==route execution time: ${header.end}"/>
        </route>
    </camelContext>
</beans>
